services:
    #  nginx-proxy:
    #    container_name: hts-appteam-nginx-proxy
    #    image: nginxproxy/nginx-proxy
    #    restart: always
    #    ports:
    #      - "443:443"
    #    volumes:
    #      - ./docker/certificates/wildcard/:/etc/nginx/certs
    #      - /var/run/docker.sock:/tmp/docker.sock:ro
    #    networks:
    #      - default
    #      - hts-appteam-local-dev
    backend:
        container_name: bisonbar_backend
        hostname: bisonbar.docker.dev
        build:
            context: .
            dockerfile: docker/backend.dockerfile
        volumes:
            - ./:/var/www
        environment:
            - VIRTUAL_HOST=bisonbar.docker.dev
            - VIRTUAL_PROTO=https
            - VIRTUAL_PORT=443
        networks:
            - default
            - hts-appteam-local-dev
        ports:
            - "9060:9060"
    frontend:
        container_name: bisonbar_frontend
        image: node:current-alpine
        volumes:
            - ./:/var/www/public
        build:
            dockerfile: docker/frontend.dockerfile
        working_dir: /var/www/public
        ports:
            - "7060:7060"
        networks:
            - default
    mariadb:
        hostname: bisonbar_mariadb.docker.dev
        container_name: bisonbar_mariadb
        image: "mariadb:latest"
        ports:
            - "8070:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "secret"
            MYSQL_DATABASE: "development"
            MYSQL_USER: "development"
            MYSQL_PASSWORD: "secret"
        networks:
            - default
            - hts-appteam-local-dev
    mariadbtest:
        hostname: bisonbar_mariadb.docker.test
        container_name: bisonbar_mariadb_test
        image: "mariadb:latest"
        ports:
            - "8071:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "secret"
            MYSQL_DATABASE: "test"
            MYSQL_USER: "test"
            MYSQL_PASSWORD: "secret"
        networks:
            - default
            - hts-appteam-local-dev
#  mail.docker.dev:
#    hostname: mail.docker.dev
#    container_name: hts-appteam-dev-mail
#    image: mailhog/mailhog:latest
#    restart: always
#    environment:
#      - MH_HOSTNAME=mail.docker.dev
#      - VIRTUAL_HOST=mail.docker.dev
#      - VIRTUAL_PROTO=http
#      - VIRTUAL_PORT=8025
#    ports:
#      - 1025:1025
#    networks:
#      - default
#      - hts-appteam-local-dev
networks:
    hts-appteam-local-dev:
        external: true
